// M4LCID.idl : IDL source for M4LCID.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (M4LCID.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
import "Definitions.idl";


	typedef [uuid(A2971260-63BF-11d4-B15C-00C04F71652D), helpstring("Property LocalType")]
    enum M4LocalType 
	{
			M4LOCALE_ILANGUAGE = 0x00000001,   // language id
			M4LOCALE_SLANGUAGE = 0x00000002,   // localized name of language
			M4LOCALE_SENGLANGUAGE = 0x00001001,   // English name of language
			M4LOCALE_SABBREVLANGNAME = 0x00000003,   // abbreviated language name
			M4LOCALE_SNATIVELANGNAME = 0x00000004,   // native name of language
			M4LOCALE_ICOUNTRY = 0x00000005,   // country code
			M4LOCALE_SCOUNTRY = 0x00000006,   // localized name of country
			M4LOCALE_SENGCOUNTRY = 0x00001002,   // English name of country
			M4LOCALE_SABBREVCTRYNAME = 0x00000007,   // abbreviated country name
			M4LOCALE_SNATIVECTRYNAME = 0x00000008,   // native name of country
			M4LOCALE_IDEFAULTLANGUAGE = 0x00000009,   // default language id
			M4LOCALE_IDEFAULTCOUNTRY = 0x0000000A,   // default country code
			M4LOCALE_IDEFAULTCODEPAGE = 0x0000000B,   // default oem code page
			M4LOCALE_IDEFAULTANSICODEPAGE = 0x00001004,   // default ansi code page
			M4LOCALE_IDEFAULTMACCODEPAGE = 0x00001011,   // default mac code page
			M4LOCALE_SLIST = 0x0000000C,   // list item separator
			M4LOCALE_IMEASURE = 0x0000000D,   // 0 = metric, 1 = US
			M4LOCALE_SDECIMAL = 0x0000000E,   // decimal separator
			M4LOCALE_STHOUSAND = 0x0000000F,   // thousand separator
			M4LOCALE_SGROUPING = 0x00000010,   // digit grouping
			M4LOCALE_IDIGITS = 0x00000011,   // number of fractional digits
			M4LOCALE_ILZERO = 0x00000012,   // leading zeros for decimal
			M4LOCALE_INEGNUMBER = 0x00001010,  // negative number mode
			M4LOCALE_SNATIVEDIGITS = 0x00000013,   // native ascii 0-9
			M4LOCALE_SCURRENCY = 0x00000014,   // local monetary symbol
			M4LOCALE_SINTLSYMBOL = 0x00000015,   // intl monetary symbol
			M4LOCALE_SMONDECIMALSEP = 0x00000016,   // monetary decimal separator
			M4LOCALE_SMONTHOUSANDSEP = 0x00000017,   // monetary thousand separator
			M4LOCALE_SMONGROUPING = 0x00000018,   // monetary grouping
			M4LOCALE_ICURRDIGITS = 0x00000019,   // # local monetary digits
			M4LOCALE_IINTLCURRDIGITS = 0x0000001A,   // # intl monetary digits
			M4LOCALE_ICURRENCY = 0x0000001B,   // positive currency mode
			M4LOCALE_INEGCURR = 0x0000001C,   // negative currency mode
			M4LOCALE_SDATE = 0x0000001D,   // date separator
			M4LOCALE_STIME = 0x0000001E,   // time separator
			M4LOCALE_SSHORTDATE = 0x0000001F,   // short date format string
			M4LOCALE_SLONGDATE = 0x00000020,   // long date format string
			M4LOCALE_STIMEFORMAT = 0x00001003,   // time format string
			M4LOCALE_IDATE = 0x00000021,   // short date format ordering
			M4LOCALE_ILDATE = 0x00000022,   // long date format ordering
			M4LOCALE_ITIME = 0x00000023,   // time format specifier
			M4LOCALE_ITIMEMARKPOSN = 0x00001005,  // time marker position
			M4LOCALE_ICENTURY = 0x00000024,   // century format specifier (short date)
			M4LOCALE_ITLZERO = 0x00000025,   // leading zeros in time field
			M4LOCALE_IDAYLZERO = 0x00000026,   // leading zeros in day field (short date)
			M4LOCALE_IMONLZERO = 0x00000027,   // leading zeros in month field (short date)
			M4LOCALE_S1159 = 0x00000028,   // AM designator
			M4LOCALE_S2359 = 0x00000029,   // PM designator
			M4LOCALE_ICALENDARTYPE = 0x00001009,   // type of calendar specifier
			M4LOCALE_IOPTIONALCALENDAR = 0x0000100B,   // additional calendar types specifier
			M4LOCALE_IFIRSTDAYOFWEEK = 0x0000100C,   // first day of week specifier
			M4LOCALE_IFIRSTWEEKOFYEAR = 0x0000100D,   // first week of year specifier
			M4LOCALE_SDAYNAME1 = 0x0000002A,   // long name for Monday
			M4LOCALE_SDAYNAME2 = 0x0000002B,   // long name for Tuesday
			M4LOCALE_SDAYNAME3 = 0x0000002C,   // long name for Wednesday
			M4LOCALE_SDAYNAME4 = 0x0000002D,   // long name for Thursday
			M4LOCALE_SDAYNAME5 = 0x0000002E,   // long name for Friday
			M4LOCALE_SDAYNAME6 = 0x0000002F,   // long name for Saturday
			M4LOCALE_SDAYNAME7 = 0x00000030,   // long name for Sunday
			M4LOCALE_SABBREVDAYNAME1 = 0x00000031,   // abbreviated name for Monday
			M4LOCALE_SABBREVDAYNAME2 =0x00000032,   // abbreviated name for Tuesday
			M4LOCALE_SABBREVDAYNAME3 = 0x00000033,   // abbreviated name for Wednesday
			M4LOCALE_SABBREVDAYNAME4 = 0x00000034,   // abbreviated name for Thursday
			M4LOCALE_SABBREVDAYNAME5 = 0x00000035,   // abbreviated name for Friday
			M4LOCALE_SABBREVDAYNAME6 = 0x00000036,   // abbreviated name for Saturday
			M4LOCALE_SABBREVDAYNAME7 = 0x00000037,   // abbreviated name for Sunday
			M4LOCALE_SMONTHNAME1 = 0x00000038,   // long name for January
			M4LOCALE_SMONTHNAME2 = 0x00000039,   // long name for February
			M4LOCALE_SMONTHNAME3 = 0x0000003A,   // long name for March
			M4LOCALE_SMONTHNAME4 = 0x0000003B,   // long name for April
			M4LOCALE_SMONTHNAME5 = 0x0000003C,   // long name for May
			M4LOCALE_SMONTHNAME6 = 0x0000003D,   // long name for June
			M4LOCALE_SMONTHNAME7 = 0x0000003E,   // long name for July
			M4LOCALE_SMONTHNAME8 = 0x0000003F,   // long name for August
			M4LOCALE_SMONTHNAME9 = 0x00000040,   // long name for September
			M4LOCALE_SMONTHNAME10 = 0x00000041,   // long name for October
			M4LOCALE_SMONTHNAME11 = 0x00000042,   // long name for November
			M4LOCALE_SMONTHNAME12 = 0x00000043,   // long name for December
			M4LOCALE_SMONTHNAME13 = 0x0000100E,   // long name for 13th month (if exists)
			M4LOCALE_SABBREVMONTHNAME1 = 0x00000044,   // abbreviated name for January
			M4LOCALE_SABBREVMONTHNAME2 = 0x00000045,   // abbreviated name for February
			M4LOCALE_SABBREVMONTHNAME3 = 0x00000046,   // abbreviated name for March
			M4LOCALE_SABBREVMONTHNAME4 = 0x00000047,   // abbreviated name for April
			M4LOCALE_SABBREVMONTHNAME5 = 0x00000048,   // abbreviated name for May
			M4LOCALE_SABBREVMONTHNAME6 = 0x00000049,   // abbreviated name for June
			M4LOCALE_SABBREVMONTHNAME7 = 0x0000004A,   // abbreviated name for July
			M4LOCALE_SABBREVMONTHNAME8 = 0x0000004B,   // abbreviated name for August
			M4LOCALE_SABBREVMONTHNAME9 = 0x0000004C,   // abbreviated name for September
			M4LOCALE_SABBREVMONTHNAME10 = 0x0000004D,   // abbreviated name for October
			M4LOCALE_SABBREVMONTHNAME11 = 0x0000004E,   // abbreviated name for November
			M4LOCALE_SABBREVMONTHNAME12 = 0x0000004F,   // abbreviated name for December
			M4LOCALE_SABBREVMONTHNAME13 = 0x0000100F,   // abbreviated name for 13th month (if exists)
			M4LOCALE_SPOSITIVESIGN = 0x00000050,   // positive sign
			M4LOCALE_SNEGATIVESIGN = 0x00000051,   // negative sign
			M4LOCALE_IPOSSIGNPOSN = 0x00000052,   // positive sign position
			M4LOCALE_INEGSIGNPOSN = 0x00000053,   // negative sign position
			M4LOCALE_IPOSSYMPRECEDES = 0x00000054,   // mon sym precedes pos amt
			M4LOCALE_IPOSSEPBYSPACE = 0x00000055,   // mon sym sep by space from pos amt
			M4LOCALE_INEGSYMPRECEDES = 0x00000056,   // mon sym precedes neg amt
			M4LOCALE_INEGSEPBYSPACE = 0x00000057   // mon sym sep by space from neg amt

    } M4LocalType;

	
	[
		object,
		uuid(E03EF4EE-1771-11D3-BDB1-00C04FA49636),
		dual,
		helpstring("ILocalID Interface"),
		pointer_default(unique)
	]
	interface ILocalID : IDispatch
	{
		[id(1), helpstring("method SetLanguage")] HRESULT SetLanguage([in]long LCID);
		[id(2), helpstring("method GetLanguage")] HRESULT GetLanguage([out, retval]long *LCID);
		[id(3), helpstring("method LoadResourceString")] HRESULT LoadResourceString([in]long IdRes, [in, optional, defaultvalue(0)]long hInst, [out, retval]BSTR *resource);
		[propget, id(4), helpstring("property hInstance")] HRESULT hInstance([out, retval] long *pVal);
		[propput, id(4), helpstring("property hInstance")] HRESULT hInstance([in] long newVal);
		[id(5), helpstring("method GetcurrentDateFormat")] HRESULT GetCurrentDateFormat([out, retval]BSTR *dateFormat);
		[id(6), helpstring("method SetcurrentDateFormat")] HRESULT SetCurrentDateFormat([in]BSTR dateFormat);
		[id(7), helpstring("method GetcurrentDate")] HRESULT GetCurrentDate([out, retval]BSTR *date);
		[id(8), helpstring("method SetcurrentDate")] HRESULT SetCurrentDate([in]BSTR date);
		[id(9), helpstring("method GetLocalInfo")] HRESULT GetLocalInfo([in] M4LocalType emlt, [out, retval] BSTR * bstrOut);
	
	};
	


[
	uuid(E03EF4E1-1771-11D3-BDB1-00C04FA49636),
	version(1.0),
	helpstring("M4LCID 1.0 Type Library")
]
library M4LCIDLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	
	[
		uuid(E03EF4EF-1771-11D3-BDB1-00C04FA49636),
		helpstring("LocalID Class")
	]
	coclass LocalID
	{
		[default] interface ILocalID;
	};

};
